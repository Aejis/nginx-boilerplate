
upstream ${name} {
  server unix:///srv/apps/${hostname}/tmp/sockets/${hostname}.sock;
}

server {
  listen 80;
  server_name ${hostname} www.${hostname};

  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  server_name www.${hostname};

  ssl_certificate     /etc/nginx/ssl/${hostname}.crt;
  ssl_certificate_key /etc/nginx/ssl/${hostname}.key;

  return 301 https://${hostname}$request_uri;
}

server {
  listen 443 ssl spdy deferred; # deferred for Linux, accept_filter=httpready for FreeBSD
  server_name ${hostname};

  root ${public_folder};

  location @backend {
    proxy_pass http://${name};
  }

  location / {
    try_files $uri $uri/ @backend;
  }

  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  # Here is three variants: performant, secure and ie6
  include /etc/nginx/conf/server/ssl/performant.conf;

  # Paths to SSL certificates
  ssl_certificate         /etc/nginx/ssl/${hostname}.crt;
  ssl_certificate_key     /etc/nginx/ssl/${hostname}.key;
  ssl_trusted_certificate /etc/nginx/ssl/${hostname}.crt;

  add_header "Access-Control-Allow-Origin" "*.${hostname}"; # Edit it if you plan to use CORS from different hosts
  add_header "Cache-Control" "no-transform"; # Prevent mobile network providers from modifying your site
  add_header "X-UA-Compatible" "IE=Edge"; # Use ChromeFrame if it's installed

  # Use dedicated log for each host
  access_log /var/log/nginx/${hostname}.access.log main;
  error_log  /var/log/nginx/${hostname}.error.log;
}
